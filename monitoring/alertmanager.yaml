apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: protein-operators
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alerts@protein-operators.com'
      smtp_auth_username: 'alerts@protein-operators.com'
      smtp_auth_password: 'password'

    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
      routes:
      - match:
          severity: critical
        receiver: 'critical-alerts'
      - match:
          severity: warning
        receiver: 'warning-alerts'

    receivers:
    - name: 'web.hook'
      webhook_configs:
      - url: 'http://localhost:5001/'

    - name: 'critical-alerts'
      email_configs:
      - to: 'admin@protein-operators.com'
        subject: 'CRITICAL: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
          {{ end }}
      slack_configs:
      - api_url: 'YOUR_SLACK_WEBHOOK_URL'
        channel: '#alerts'
        title: 'CRITICAL Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          {{ .Annotations.summary }}
          {{ .Annotations.description }}
          {{ end }}

    - name: 'warning-alerts'
      email_configs:
      - to: 'team@protein-operators.com'
        subject: 'WARNING: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          {{ end }}

    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'dev', 'instance']

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: protein-operators
data:
  protein-operators.rules.yml: |
    groups:
    - name: protein-operators.rules
      rules:
      - alert: ProteinOperatorsDown
        expr: up{job="protein-operators"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Protein Operators instance is down"
          description: "Protein Operators instance {{ $labels.instance }} has been down for more than 1 minute."

      - alert: ProteinOperatorsHighMemoryUsage
        expr: (process_resident_memory_bytes{job="protein-operators"} / (1024*1024*1024)) > 6
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Protein Operators high memory usage"
          description: "Protein Operators instance {{ $labels.instance }} is using {{ $value }}GB of memory."

      - alert: ProteinOperatorsHighCPUUsage
        expr: rate(process_cpu_seconds_total{job="protein-operators"}[5m]) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Protein Operators high CPU usage"
          description: "Protein Operators instance {{ $labels.instance }} has high CPU usage: {{ $value }}%."

      - alert: ProteinOperatorsHighErrorRate
        expr: rate(protein_design_errors_total[5m]) > 0.1
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Protein Operators high error rate"
          description: "Protein Operators is experiencing {{ $value }} errors per second."

      - alert: ProteinOperatorsSlowResponse
        expr: histogram_quantile(0.95, rate(protein_design_duration_seconds_bucket[5m])) > 30
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Protein Operators slow response time"
          description: "95th percentile response time is {{ $value }} seconds."

      - alert: ProteinOperatorsLowThroughput
        expr: rate(protein_design_requests_total[5m]) < 0.1
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Protein Operators low throughput"
          description: "Request rate is only {{ $value }} requests per second."

      - alert: KubernetesPodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total{namespace="protein-operators"}[5m]) > 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Pod is crash looping"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is crash looping."

      - alert: KubernetesPodNotReady
        expr: kube_pod_status_ready{condition="false", namespace="protein-operators"} == 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Pod not ready"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has been not ready for more than 5 minutes."

      - alert: KubernetesDeploymentReplicasMismatch
        expr: kube_deployment_status_replicas_available{namespace="protein-operators"} != kube_deployment_spec_replicas{namespace="protein-operators"}
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Deployment replicas mismatch"
          description: "Deployment {{ $labels.deployment }} in namespace {{ $labels.namespace }} has {{ $value }} available replicas, expected {{ $labels.spec_replicas }}."

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: protein-operators
  labels:
    app: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager:v0.25.0
        args:
          - '--config.file=/etc/alertmanager/alertmanager.yml'
          - '--storage.path=/alertmanager'
          - '--web.external-url=http://localhost:9093'
        ports:
        - containerPort: 9093
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        volumeMounts:
        - name: alertmanager-config-volume
          mountPath: /etc/alertmanager
        - name: alertmanager-storage-volume
          mountPath: /alertmanager
      volumes:
      - name: alertmanager-config-volume
        configMap:
          defaultMode: 420
          name: alertmanager-config
      - name: alertmanager-storage-volume
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: protein-operators
  labels:
    app: alertmanager
spec:
  type: ClusterIP
  ports:
  - port: 9093
    targetPort: 9093
    protocol: TCP
    name: web
  selector:
    app: alertmanager