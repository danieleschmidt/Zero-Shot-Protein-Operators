apiVersion: apps/v1
kind: Deployment
metadata:
  name: protein-operators
  namespace: protein-operators
  labels:
    app: protein-operators
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: protein-operators
  template:
    metadata:
      labels:
        app: protein-operators
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: protein-operators
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: protein-operators
        image: protein-operators:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: api
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: PROTEIN_OPERATORS_ENV
          value: "production"
        - name: PROTEIN_OPERATORS_CONFIG_PATH
          value: "/app/config"
        - name: PROTEIN_OPERATORS_LOG_LEVEL
          value: "INFO"
        - name: PYTHONPATH
          value: "/app/src"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: models
          mountPath: /app/models
        - name: logs
          mountPath: /app/logs
        - name: data
          mountPath: /app/data
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "8Gi"
            cpu: "4"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 18
      volumes:
      - name: config
        configMap:
          name: protein-operators-config
      - name: models
        persistentVolumeClaim:
          claimName: protein-operators-models
      - name: logs
        persistentVolumeClaim:
          claimName: protein-operators-logs
      - name: data
        persistentVolumeClaim:
          claimName: protein-operators-data
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - protein-operators
              topologyKey: kubernetes.io/hostname